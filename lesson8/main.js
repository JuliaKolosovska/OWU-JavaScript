// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone
// створити пустий масив, наповнити його 10 об'єктами new User(....)
//

function User(id, name, surname, email, phone){
    this.id=id;
    this.name=name;
    this.surname=surname;
    this.email=email;
    this.phone=phone;
}


let users=[
    new User(1, 'Oleg', 'Kovalenko', 'olkov@or.com', 2356478910),
    new User(2, 'Oksana', 'Mykhalchuk', 'omych@ot.com', 1561453610),
    new User(3, 'Mark', 'Los', 'losmark@gty.com', 47895210),
    new User(4, 'Artem', 'Shevchenko', 'artsheva@klo.com', 747586935221),
    new User(5, 'Maks', 'Bondar', 'mabond@ot.com', 52752527),
    new User(6, 'Alla', 'Polishchuk', 'allpolis@pol.com', 272774466),
    new User(7, 'Boris', 'Pysar', 'borpys@bbr.com', 78945874),
    new User(8, 'Dima', 'Sheiko', 'dimshei@vgtr.com', 25896458),
    new User(9, 'Bogdan', 'Metoshop', 'bogmet@ygy.com', 784785475),
    new User(10, 'Alina', 'Lishchuk', 'alis@ot.ygy', 523652148),
]
console.log(users);



// - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)

let filtered=users.filter(user=>{
    return user.id%2===0;
})
console.log(filtered);



// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)

// (робила по спаданню, щоб було видно результат)

let sorted= users.sort((a,b)=>{
    return b.id-a.id;
})
console.log(sorted);



// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client
// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)
//
//
// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску,
// максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна
// швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
//
// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//     Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку